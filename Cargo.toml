[workspace]
resolver = "2"
members = [
    "capnweb-core",
    "capnweb-transport",
    "capnweb-server",
    "capnweb-client",
    "capnweb-interop-tests",
]

[workspace.package]
version = "0.1.0"
authors = ["Brian Meek <brian@currentspace.dev>"]
edition = "2021"
rust-version = "1.75"
license = "MIT OR Apache-2.0"
repository = "https://github.com/currentspace/capn-rs"
homepage = "https://github.com/currentspace/capn-rs"
documentation = "https://docs.rs/capnweb-core"
readme = "README.md"
keywords = ["rpc", "capnweb", "capability", "protocol", "async"]
categories = ["network-programming", "web-programming", "asynchronous"]

[workspace.lints.clippy]
# Correctness - Deny in production
unwrap_used = "warn"             # TODO: Change to "deny" after cleanup
expect_used = "warn"              # Require meaningful expect messages
panic = "warn"                    # TODO: Change to "deny" after cleanup
todo = "warn"                     # Track incomplete implementations
unimplemented = "warn"            # Track unimplemented features

# Performance
redundant_clone = "warn"          # Avoid unnecessary clones
inefficient_to_string = "warn"   # Use Display instead of to_string
unnecessary_to_owned = "warn"     # Avoid unnecessary String allocations
large_enum_variant = "warn"       # Box large enum variants
large_stack_arrays = "warn"       # Prevent stack overflow

# Style & Clarity
missing_docs = "allow"            # TODO: Enable after adding docs
missing_debug_implementations = "warn"
missing_copy_implementations = "warn"
needless_borrow = "warn"
needless_lifetimes = "warn"

# Async
future_not_send = "warn"          # Futures should be Send

[workspace.lints.rust]
unsafe_code = "warn"              # Flag all unsafe usage for review
missing_docs = "allow"            # TODO: Enable after documentation


[workspace.dependencies]
# Core dependencies
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
thiserror = "2.0"
anyhow = "1.0"

# Async runtime
tokio = { version = "1.40", features = ["full"] }
futures = "0.3"
async-trait = "0.1"

# HTTP stack
axum = { version = "0.8", features = ["ws"] }
hyper = { version = "1.5", features = ["http1", "http2", "server", "client"] }
tower = "0.5"
tower-http = { version = "0.6", features = ["cors"] }
http = "1.1"

# HTTP/3 & QUIC
quinn = "0.11"
h3 = "0.0.8"
h3-quinn = "0.0.10"
rustls = "0.23"
rustls-pemfile = "2.0"
rcgen = "0.14"

# WebSocket
tokio-tungstenite = "0.27"
tungstenite = "0.27"

# Utilities
dashmap = "6.1"
indexmap = "2.6"
governor = "0.10"
nonzero_ext = "0.3"
bytes = "1.8"
uuid = { version = "1.11", features = ["v4"] }
tokio-util = { version = "0.7", features = ["codec"] }
base64 = "0.22"
sha2 = "0.10"
rand = "0.9"

# Validation
jsonschema = "0.33"
schemars = "1.0"

# Observability
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "json", "chrono"] }
tracing-appender = "0.2"

# Testing
criterion = "0.7"
proptest = "1.6"
mockito = "1.6"
insta = "1.41"

# Examples
chrono = { version = "0.4", features = ["serde"] }

# Internal crates
capnweb-core = { path = "capnweb-core" }
capnweb-transport = { path = "capnweb-transport" }
capnweb-server = { path = "capnweb-server" }
capnweb-client = { path = "capnweb-client" }

[profile.release]
lto = true
codegen-units = 1
opt-level = 3

[profile.dev]
opt-level = 0

[profile.test]
opt-level = 2